import {
  useState,
  useEffect,
} from "react";
import PropTypes from "prop-types";
import {
  MapContainer,
  // Polygon,
  Rectangle,
  Tooltip,
} from "react-leaflet";
import Container from "react-bootstrap/Container";
import Row from "react-bootstrap/Row";
import Col from "react-bootstrap/Col";
import { useMapEvents, useMap } from "react-leaflet/hooks";
import { CRS } from "leaflet";
import { useAppDispatch } from "../../app/hooks";
import CustomLayer from "./CustomLayer";
import CustomAILayer from "./CustomAILayer";
import { useSearchParams } from "react-router";
import {
  selectShip,
  selectCruise,
  selectSensor,
  //
  updateDepthIndex,
  updateTimeIndex,
  selectAnnotation,
  selectAnnotationColor,
  selectAnnotationAI,
  //
  updateDepthMinIndex,
  updateDepthMaxIndex,
  updateTimeMinIndex,
  updateTimeMaxIndex,
  //
  // selectDepthMinIndex,
  // selectDepthMaxIndex,
  //
  selectTimeMinIndex,
  selectTimeMaxIndex,
  //
  depthArrayAsync,
  timeArrayAsync,
} from "../../reducers/store/storeSlice";
import { useAppSelector } from "../../app/hooks.ts";
// Using this to figure out most of the solution:
// https://stackblitz.com/edit/react-leaflet-square?file=src%2FApp.js
import TimeAxis from "../WaterColumnView/Axes/TimeAxis.jsx";
import DepthAxis from "../WaterColumnView/Axes/DepthAxis.jsx";

function LocationMarker() {
  const dispatch = useAppDispatch();
  const [searchParams, setSearchParams] = useSearchParams();

  useMapEvents({
    click(e) {
      const newTimeIndex = parseInt(e.latlng.lng, 10);
      const newDepthIndex = parseInt(e.latlng.lat * -1.0, 10);

      // console.log(`newTimeIndex: ${newTimeIndex}, newDepthIndex: ${newDepthIndex}`);

      dispatch(updateTimeIndex(newTimeIndex));
      dispatch(updateDepthIndex(newDepthIndex));

      setSearchParams(
        // Update time url param
        (prev) => {
          prev.set("time", newTimeIndex);
          return prev;
        }
      );
    },
  });

  return null;
}

// const rectangles = [
//   [
//     [-564, 2187169],
//     [-591, 2187178],
//   ],
//   [
//     [-574, 2187877],
//     [-602, 2187893],
//   ],
//   [
//     [-574, 2188016],
//     [-600, 2188026],
//   ],
//   [
//     [-557, 2188080],
//     [-583, 2188086],
//   ],
//   [
//     [-571, 2188143],
//     [-607, 2188153],
//   ],
//   [
//     [-586, 2188157],
//     [-609, 2188164],
//   ],
//   [
//     [-583, 2188504],
//     [-616, 2188511],
//   ],
//   [
//     [-567, 2189729],
//     [-603, 2189746],
//   ],
//   [
//     [-662, 2191532],
//     [-694, 2191543],
//   ],
//   [
//     [-721, 2191781],
//     [-744, 2191789]
//   ],
// ]
const rectangles = [
 [[-564, 2187169], [-591, 2187178]],
 [[-574, 2187877], [-602, 2187893]],
 [[-574, 2188016], [-600, 2188026]],
 [[-557, 2188080], [-583, 2188086]],
 [[-571, 2188143], [-607, 2188153]],
 [[-586, 2188157], [-609, 2188164]],
 [[-583, 2188504], [-616, 2188511]],
 [[-567, 2189729], [-603, 2189746]],
 [[-662, 2191532], [-694, 2191543]],
 [[-721, 2191781], [-744, 2191789]],
 [[-713, 2191834], [-748, 2191848]],
 [[-704, 2191854], [-731, 2191866]],
 [[-694, 2191869], [-733, 2191878]],
 [[-673, 2191899], [-741, 2191927]],
 [[-714, 2192021], [-739, 2192031]],
 [[-696, 2192127], [-717, 2192136]],
 [[-684, 2192148], [-724, 2192156]],
 [[-688, 2192168], [-732, 2192185]],
 [[-661, 2192195], [-694, 2192206]],
 [[-682, 2192219], [-718, 2192229]],
 [[-699, 2192233], [-722, 2192240]],
 [[-672, 2192247], [-718, 2192261]],
 [[-694, 2192271], [-726, 2192280]],
 [[-660, 2192324], [-698, 2192404]],
 [[-810, 2192521], [-836, 2192532]],
 [[-816, 2192593], [-838, 2192610]],
 [[-815, 2192694], [-837, 2192708]],
 [[-819, 2192744], [-842, 2192762]],
 [[-801, 2192784], [-845, 2192841]],
 [[-807, 2192856], [-834, 2192866]],
 [[-803, 2192943], [-833, 2192958]],
 [[-678, 2193283], [-717, 2193308]],
 [[-703, 2193341], [-726, 2193356]],
 [[-757, 2193406], [-781, 2193437]],
 [[-717, 2193601], [-761, 2193620]],
 [[-894, 2195485], [-981, 2195545]],
 [[-907, 2195547], [-928, 2195563]],
 [[-354, 2197469], [-375, 2197492]],
 [[-684, 2197497], [-709, 2197506]],
 [[-293, 2197499], [-314, 2197502]],
 [[-297, 2197543], [-320, 2197548]],
 [[-760, 2197545], [-804, 2197553]],
 [[-726, 2197560], [-753, 2197572]],
 [[-294, 2197564], [-324, 2197590]],
 [[-737, 2197585], [-779, 2197593]],
 [[-296, 2197597], [-317, 2197602]],
 [[-695, 2197620], [-746, 2197630]],
 [[-294, 2197631], [-337, 2197661]],
 [[-651, 2197980], [-679, 2197987]],
 [[-660, 2198053], [-711, 2198060]],
 [[-657, 2198116], [-695, 2198122]],
 [[-661, 2198131], [-686, 2198137]],
 [[-690, 2198156], [-710, 2198162]],
 [[-653, 2198171], [-683, 2198190]],
 [[-856, 2198252], [-879, 2198274]],
 [[-649, 2198260], [-686, 2198271]],
 [[-632, 2198275], [-693, 2198292]],
 [[-855, 2198281], [-877, 2198288]],
 [[-648, 2198298], [-669, 2198304]],
 [[-865, 2198325], [-899, 2198342]],
 [[-664, 2198326], [-699, 2198347]],
 [[-875, 2198384], [-904, 2198432]],
 [[-720, 2198410], [-745, 2198420]],
 [[-862, 2198438], [-903, 2198479]],
 [[-877, 2198492], [-905, 2198502]],
 [[-892, 2198536], [-912, 2198555]],
 [[-887, 2198569], [-916, 2198578]],
 [[-889, 2198578], [-916, 2198600]],
 [[-715, 2198581], [-737, 2198597]],
 [[-885, 2198608], [-922, 2198652]],
 [[-886, 2198653], [-913, 2198683]],
 [[-900, 2198691], [-935, 2198705]],
 [[-744, 2198713], [-770, 2198726]],
 [[-723, 2198753], [-755, 2198763]],
 [[-603, 2198788], [-628, 2198816]],
 [[-566, 2198834], [-607, 2198874]],
 [[-774, 2198858], [-836, 2198866]],
 [[-544, 2198882], [-585, 2198898]],
 [[-749, 2198888], [-769, 2198894]],
 [[-584, 2198899], [-610, 2198917]],
 [[-631, 2198905], [-652, 2198925]],
 [[-544, 2198913], [-569, 2198924]],
 [[-904, 2198941], [-931, 2198971]],
 [[-924, 2198993], [-948, 2199009]],
 [[-627, 2199036], [-649, 2199050]],
 [[-905, 2199054], [-951, 2199095]],
 [[-626, 2199056], [-648, 2199079]],
 [[-906, 2199092], [-944, 2199143]],
 [[-899, 2199147], [-946, 2199170]],
 [[-888, 2199197], [-948, 2199261]],
 [[-511, 2199231], [-533, 2199246]],
 [[-904, 2199406], [-933, 2199426]],
 [[-229, 2199473], [-250, 2199480]],
 [[-400, 2199526], [-424, 2199532]],
 [[-413, 2199537], [-449, 2199561]],
 [[-548, 2199577], [-569, 2199586]],
 [[-217, 2199641], [-238, 2199647]],
 [[-333, 2199642], [-359, 2199648]],
 [[-214, 2199722], [-238, 2199731]],
 [[-919, 2199765], [-940, 2199780]],
 [[-930, 2199960], [-964, 2199978]],
 [[-923, 2200076], [-950, 2200096]],
 [[-200, 2200224], [-222, 2200233]],
 [[-211, 2200261], [-233, 2200274]],
 [[-208, 2200283], [-232, 2200316]],
 [[-928, 2200388], [-951, 2200410]],
 [[-214, 2200446], [-236, 2200461]],
 [[-199, 2200533], [-250, 2200603]],
 [[-282, 2200533], [-317, 2200548]],
 [[-298, 2200557], [-326, 2200568]],
 [[-344, 2200585], [-367, 2200595]],
 [[-245, 2200605], [-287, 2200615]],
 [[-206, 2200634], [-274, 2200722]],
 [[-360, 2200650], [-380, 2200658]],
 [[-376, 2200683], [-420, 2200721]],
 [[-354, 2200711], [-377, 2200718]],
 [[-207, 2200734], [-234, 2200739]],
 [[-221, 2200746], [-246, 2200763]],
 [[-190, 2200807], [-211, 2200813]],
 [[-928, 2200943], [-957, 2200969]],
 [[-932, 2200998], [-956, 2201015]],
 [[-935, 2201424], [-964, 2201439]],
 [[-384, 2201534], [-413, 2201555]],
 [[-383, 2201564], [-414, 2201588]],
 [[-269, 2201969], [-309, 2201979]],
 [[-958, 2202212], [-981, 2202227]],
 [[-283, 2202250], [-311, 2202257]],
 [[-446, 2202267], [-469, 2202275]],
 [[-302, 2202292], [-350, 2202300]],
 [[-959, 2202301], [-989, 2202314]],
 [[-318, 2202302], [-407, 2202355]],
 [[-968, 2202337], [-996, 2202356]],
 [[-246, 2202359], [-267, 2202365]],
 [[-297, 2202359], [-344, 2202385]],
 [[-949, 2202379], [-996, 2202418]],
 [[-271, 2202389], [-292, 2202396]],
 [[-351, 2202411], [-375, 2202417]],
 [[-313, 2202429], [-343, 2202439]],
 [[-299, 2202442], [-338, 2202452]],
 [[-242, 2202451], [-284, 2202455]],
 [[-303, 2202462], [-331, 2202471]],
 [[-177, 2202714], [-209, 2202720]],
 [[-193, 2202813], [-220, 2202824]],
 [[-196, 2202863], [-246, 2202900]],
 [[-382, 2202890], [-420, 2202903]],
 [[-206, 2202935], [-226, 2202958]],
 [[-192, 2202974], [-230, 2202988]],
 [[-197, 2203005], [-229, 2203024]],
 [[-966, 2203011], [-996, 2203026]],
 [[-993, 2203027], [-1014, 2203043]],
 [[-965, 2203043], [-1004, 2203070]],
 [[-182, 2203082], [-207, 2203097]],
 [[-1016, 2203399], [-1055, 2203425]],
 [[-1039, 2204003], [-1071, 2204042]],
 [[-973, 2204126], [-1000, 2204165]],
 [[-972, 2204195], [-1004, 2204213]],
 [[-983, 2204216], [-1071, 2204297]],
 [[-977, 2204258], [-1008, 2204272]],
 [[-986, 2204310], [-1013, 2204338]],
 [[-984, 2204342], [-1027, 2204396]],
 [[-973, 2204573], [-999, 2204595]],
 [[-987, 2204613], [-1033, 2204649]],
 [[-988, 2204652], [-1024, 2204684]],
 [[-970, 2204695], [-1022, 2204738]],
 [[-961, 2204736], [-1018, 2204759]],
 [[-953, 2204801], [-991, 2204830]],
 [[-948, 2204936], [-971, 2204948]],
 [[-956, 2204951], [-977, 2204958]],
 [[-950, 2204982], [-979, 2205021]],
 [[-855, 2205641], [-877, 2205666]],
 [[-849, 2205765], [-883, 2205787]],
 [[-854, 2205819], [-876, 2205836]],
 [[-841, 2205971], [-891, 2206020]],
 [[-825, 2206015], [-869, 2206092]],
 [[-832, 2206134], [-872, 2206171]],
 [[-848, 2206178], [-869, 2206190]]
]
const rectangles2 = [
 [[-120, 3965719], [-235, 3967091]],
 [[-42, 4003008], [-97, 4003803]],
 [[-100, 3967091], [-375, 3971101]],
 [[-301, 3971273], [-925, 3981297]],
 [[-93, 3981517], [-568, 4011230]],
 [[-110, 3995657], [-167, 3995675]],
 [[-374, 3971824], [-433, 3971838]],
 [[-392, 3971848], [-421, 3971854]],
 [[-433, 3971937], [-459, 3971953]],
 [[-434, 3971963], [-469, 3971980]],
 [[-429, 3971994], [-456, 3972001]],
 [[-446, 3972002], [-478, 3972023]],
 [[-454, 3972051], [-477, 3972066]],
 [[-462, 3972087], [-486, 3972096]],
 [[-488, 3972237], [-518, 3972245]],
 [[-491, 3972250], [-529, 3972288]],
 [[-515, 3972352], [-544, 3972370]],
 [[-513, 3972377], [-551, 3972419]],
 [[-515, 3972425], [-538, 3972433]],
 [[-522, 3972438], [-561, 3972482]],
 [[-533, 3972486], [-567, 3972501]],
 [[-530, 3972503], [-654, 3972965]],
 [[-584, 3972550], [-611, 3972564]],
 [[-606, 3972655], [-647, 3972852]],
 [[-604, 3972828], [-625, 3972837]],
 [[-565, 3972906], [-600, 3972928]],
 [[-583, 3972983], [-626, 3972998]],
 [[-579, 3973021], [-602, 3973040]],
 [[-589, 3973070], [-615, 3973080]],
 [[-614, 3973188], [-635, 3973203]],
 [[-621, 3973271], [-642, 3973285]],
 [[-606, 3973301], [-639, 3973317]],
 [[-605, 3973323], [-629, 3973334]],
 [[-589, 3973338], [-643, 3973469]],
 [[-598, 3973478], [-641, 3973524]],
 [[-611, 3973553], [-666, 3973647]],
 [[-573, 3973640], [-597, 3973654]],
 [[-581, 3973713], [-611, 3973723]],
 [[-643, 3973748], [-663, 3973838]],
 [[-639, 3973850], [-662, 3974032]],
 [[-545, 3974001], [-632, 3974995]],
 [[-581, 3975046], [-606, 3975061]],
 [[-589, 3975209], [-634, 3975405]],
 [[-590, 3975641], [-624, 3975689]],
 [[-605, 3975695], [-636, 3975718]],
 [[-607, 3975724], [-636, 3975736]],
 [[-601, 3975804], [-642, 3975846]],
 [[-590, 3975838], [-668, 3975982]],
 [[-605, 3976015], [-642, 3976070]],
 [[-598, 3976164], [-622, 3976184]],
 [[-614, 3976420], [-635, 3976485]],
 [[-608, 3976469], [-667, 3976681]],
 [[-593, 3976753], [-625, 3976776]],
 [[-610, 3976788], [-630, 3976857]],
 [[-634, 3976877], [-664, 3977004]],
 [[-586, 3976953], [-622, 3977017]],
 [[-624, 3977007], [-664, 3977276]],
 [[-567, 3977068], [-609, 3977121]],
 [[-539, 3977153], [-656, 3978892]],
 [[-622, 3977291], [-661, 3977338]],
 [[-626, 3977453], [-648, 3977464]],
 [[-536, 3977467], [-557, 3977488]],
 [[-548, 3977539], [-571, 3977566]],
 [[-630, 3977570], [-657, 3977649]],
 [[-631, 3978060], [-651, 3978090]],
 [[-624, 3978552], [-645, 3978582]],
 [[-570, 3978613], [-648, 3979115]],
 [[-567, 3978957], [-598, 3978972]],
 [[-569, 3979016], [-598, 3979065]],
 [[-583, 3979067], [-611, 3979094]],
 [[-567, 3979095], [-607, 3979131]],
 [[-616, 3979120], [-645, 3979142]],
 [[-556, 3979127], [-577, 3979138]],
 [[-573, 3979221], [-594, 3979226]],
 [[-577, 3979246], [-614, 3979308]],
 [[-572, 3979329], [-602, 3979337]],
 [[-571, 3979354], [-610, 3979410]],
 [[-563, 3979418], [-583, 3979432]],
 [[-595, 3979432], [-633, 3979631]],
 [[-563, 3979436], [-587, 3979444]],
 [[-560, 3979449], [-591, 3979458]],
 [[-544, 3979478], [-572, 3979486]],
 [[-553, 3979500], [-599, 3979640]],
 [[-531, 3979740], [-568, 3979761]],
 [[-506, 3979765], [-546, 3979782]],
 [[-501, 3979812], [-548, 3979826]],
 [[-500, 3979848], [-532, 3979856]],
 [[-508, 3979896], [-537, 3979905]],
 [[-493, 3979921], [-541, 3979930]],
 [[-124, 4004312], [-152, 4004327]],
 [[-129, 4004519], [-152, 4004538]],
 [[-114, 3995662], [-166, 3995667]],
 [[-175, 3967091], [-230, 3967684]],
 [[-125, 3967692], [-230, 3969555]],
 [[-150, 3968452], [-175, 3968463]],
 [[-115, 3968997], [-135, 3969001]],
 [[-50, 3969554], [-615, 3990226]],
 [[-185, 3971066], [-215, 3971084]],
 [[-180, 3971086], [-205, 3971088]],
 [[-180, 3971113], [-205, 3971116]],
 [[-160, 3971634], [-180, 3971637]],
 [[-170, 3971716], [-190, 3971719]],
 [[-160, 3971736], [-185, 3971739]],
 [[-150, 3971772], [-170, 3971774]],
 [[-185, 3971776], [-205, 3971780]],
 [[-165, 3971995], [-190, 3972005]],
 [[-410, 3972000], [-435, 3972005]],
 [[-415, 3972076], [-470, 3972093]],
 [[-415, 3972100], [-460, 3972123]],
 [[-185, 3972105], [-205, 3972109]],
 [[-170, 3972142], [-205, 3972156]],
 [[-435, 3972151], [-490, 3972163]],
 [[-430, 3972165], [-485, 3972193]],
 [[-440, 3972195], [-490, 3972214]],
 [[-410, 3972292], [-430, 3972297]],
 [[-485, 3972317], [-515, 3972323]],
 [[-410, 3972323], [-430, 3972330]],
 [[-170, 3972325], [-190, 3972329]],
 [[-460, 3972327], [-485, 3972338]],
 [[-485, 3972332], [-520, 3972346]],
 [[-200, 3972335], [-220, 3972338]],
 [[-415, 3972340], [-490, 3972356]],
 [[-195, 3972341], [-215, 3972345]],
 [[-550, 3972344], [-570, 3972373]],
 [[-420, 3972353], [-455, 3972363]],
 [[-175, 3972365], [-220, 3972375]],
 [[-435, 3972391], [-470, 3972407]],
 [[-505, 3972393], [-525, 3972399]],
 [[-490, 3972407], [-520, 3972416]],
 [[-490, 3972414], [-530, 3972437]],
 [[-425, 3972433], [-445, 3972439]],
 [[-165, 3972438], [-190, 3972445]],
 [[-475, 3972442], [-545, 3972518]],
 [[-210, 3972448], [-250, 3972455]],
 [[-455, 3972467], [-475, 3972482]],
 [[-165, 3972475], [-250, 3972483]],
 [[-175, 3972490], [-240, 3972507]],
 [[-425, 3972491], [-460, 3972501]],
 [[-570, 3972494], [-590, 3972507]],
 [[-175, 3972506], [-205, 3972512]],
 [[-455, 3972510], [-530, 3972540]],
 [[-150, 3972515], [-205, 3972525]],
 [[-150, 3972531], [-190, 3972534]],
 [[-165, 3972537], [-185, 3972540]],
 [[-425, 3972541], [-470, 3972560]],
 [[-470, 3972541], [-535, 3972564]],
 [[-145, 3972542], [-225, 3972559]],
 [[-165, 3972562], [-190, 3972565]],
 [[-485, 3972563], [-510, 3972567]],
 [[-480, 3972571], [-530, 3972580]],
 [[-520, 3972571], [-540, 3972573]],
 [[-415, 3972581], [-445, 3972589]],
 [[-135, 3972583], [-160, 3972586]],
 [[-500, 3972584], [-550, 3972616]],
 [[-465, 3972597], [-485, 3972614]],
 [[-115, 3972601], [-135, 3972604]],
 [[-445, 3972607], [-465, 3972615]],
 [[-590, 3972623], [-610, 3972653]],
 [[-415, 3972627], [-455, 3972639]],
 [[-540, 3972641], [-560, 3972653]],
 [[-465, 3972661], [-550, 3972701]],
 [[-590, 3972676], [-615, 3972745]],
 [[-425, 3972691], [-445, 3972697]],
 [[-455, 3972703], [-480, 3972706]],
 [[-145, 3972709], [-190, 3972724]],
 [[-445, 3972709], [-530, 3972738]],
 [[-465, 3972710], [-490, 3972716]],
 [[-155, 3972742], [-175, 3972747]],
 [[-185, 3972751], [-205, 3972755]],
 [[-590, 3972756], [-615, 3972767]],
 [[-190, 3972795], [-210, 3972803]],
 [[-140, 3972815], [-165, 3972819]],
 [[-490, 3972869], [-520, 3972880]],
 [[-155, 3972929], [-175, 3972935]],
 [[-520, 3972936], [-560, 3972944]],
 [[-430, 3972941], [-480, 3972960]],
 [[-515, 3973016], [-535, 3973020]],
 [[-500, 3973025], [-525, 3973033]],
 [[-515, 3973036], [-540, 3973044]],
 [[-545, 3973047], [-570, 3973059]],
 [[-630, 3973048], [-650, 3973070]],
 [[-540, 3973063], [-565, 3973068]],
 [[-135, 3973071], [-170, 3973077]],
 [[-555, 3973085], [-585, 3973101]],
 [[-635, 3973086], [-655, 3973144]],
 [[-145, 3973101], [-190, 3973106]],
 [[-545, 3973110], [-610, 3973154]],
 [[-560, 3973158], [-585, 3973186]],
 [[-570, 3973185], [-600, 3973210]],
 [[-645, 3973208], [-665, 3973210]],
 [[-135, 3973212], [-160, 3973215]],
 [[-570, 3973219], [-605, 3973236]],
 [[-120, 3973244], [-140, 3973252]],
 [[-575, 3973256], [-600, 3973270]],
 [[-575, 3973332], [-605, 3973344]],
 [[-445, 3973387], [-475, 3973398]],
 [[-645, 3973387], [-665, 3973446]],
 [[-580, 3973392], [-600, 3973412]],
 [[-450, 3973403], [-470, 3973410]],
 [[-515, 3973422], [-610, 3973500]],
 [[-135, 3973470], [-160, 3973477]],
 [[-115, 3973488], [-145, 3973492]],
 [[-550, 3973492], [-600, 3973516]],
 [[-540, 3973519], [-595, 3973536]],
 [[-125, 3973524], [-145, 3973526]],
 [[-555, 3973541], [-615, 3973578]],
 [[-525, 3973542], [-545, 3973559]],
 [[-545, 3973594], [-570, 3973606]],
 [[-595, 3973595], [-615, 3973611]],
 [[-550, 3973613], [-570, 3973618]],
 [[-625, 3973638], [-655, 3973738]],
 [[-535, 3973654], [-555, 3973660]],
 [[-560, 3973697], [-590, 3973720]],
 [[-525, 3973711], [-550, 3973721]],
 [[-480, 3973727], [-500, 3973735]],
 [[-560, 3973737], [-580, 3973765]],
 [[-470, 3973749], [-490, 3973763]],
 [[-505, 3973769], [-540, 3973785]],
 [[-545, 3973777], [-565, 3973787]],
 [[-525, 3973785], [-595, 3973804]],
 [[-625, 3973796], [-645, 3973805]],
 [[-535, 3973813], [-560, 3973825]],
 [[-625, 3973821], [-650, 3973836]],
 [[-530, 3973828], [-580, 3973846]],
 [[-515, 3973849], [-585, 3973936]],
 [[-625, 3973865], [-645, 3973904]],
 [[-475, 3973911], [-495, 3973928]],
 [[-125, 3973934], [-155, 3973938]],
 [[-530, 3973946], [-550, 3973951]],
 [[-490, 3973953], [-510, 3973960]],
 [[-520, 3973958], [-570, 3974062]],
 [[-625, 3974128], [-660, 3974259]],
 [[-630, 3974321], [-650, 3974356]],
 [[-635, 3974530], [-660, 3974791]],
 [[-640, 3974797], [-660, 3974992]],
 [[-635, 3975006], [-655, 3975040]],
 [[-595, 3975055], [-660, 3975147]],
 [[-65, 3975089], [-85, 3975092]],
 [[-585, 3975133], [-605, 3975146]],
 [[-585, 3975171], [-605, 3975204]],
 [[-540, 3975182], [-565, 3975201]],
 [[-640, 3975234], [-660, 3975294]],
 [[-470, 3975317], [-520, 3975356]],
 [[-600, 3975527], [-620, 3975536]],
 [[-135, 3975653], [-155, 3975656]],
 [[-145, 3975690], [-165, 3975699]],
 [[-565, 3975702], [-610, 3975727]],
 [[-570, 3975740], [-610, 3975762]],
 [[-580, 3975783], [-600, 3975789]],
 [[-80, 3975838], [-100, 3975844]],
 [[-465, 3976013], [-500, 3976016]],
 [[-495, 3976018], [-585, 3976160]],
 [[-580, 3976064], [-610, 3976112]],
 [[-475, 3976089], [-510, 3976118]],
 [[-65, 3976103], [-85, 3976108]],
 [[-565, 3976146], [-595, 3976181]],
 [[-530, 3976210], [-555, 3976256]],
 [[-50, 3976313], [-70, 3976316]],
 [[-530, 3976327], [-590, 3976417]],
 [[-520, 3976482], [-540, 3976522]],
 [[-550, 3976500], [-610, 3976610]],
 [[-490, 3976514], [-515, 3976533]],
 [[-125, 3976520], [-145, 3976524]],
 [[-455, 3976532], [-545, 3976598]],
 [[-630, 3976557], [-655, 3976633]],
 [[-490, 3976610], [-515, 3976620]],
 [[-455, 3976617], [-485, 3976646]],
 [[-475, 3976629], [-535, 3976678]],
 [[-630, 3976647], [-665, 3976814]],
 [[-405, 3976660], [-445, 3976678]],
 [[-635, 3976900], [-655, 3976929]],
 [[-620, 3977002], [-640, 3977021]],
 [[-85, 3977035], [-105, 3977038]],
 [[-615, 3977152], [-635, 3977196]],
 [[-80, 3977216], [-105, 3977223]],
 [[-550, 3977514], [-570, 3977528]],
 [[-125, 3977553], [-150, 3977561]],
 [[-515, 3977846], [-575, 3977900]],
 [[-130, 3977897], [-150, 3977902]],
 [[-525, 3977919], [-570, 3977931]],
 [[-135, 3977930], [-160, 3977948]],
 [[-535, 3977951], [-575, 3977979]],
 [[-545, 3977987], [-575, 3978000]],
 [[-115, 3977990], [-135, 3978009]],
 [[-115, 3978038], [-140, 3978043]],
 [[-80, 3978151], [-105, 3978162]],
 [[-510, 3978190], [-540, 3978224]],
 [[-80, 3978281], [-130, 3978317]],
 [[-110, 3978353], [-135, 3978362]],
 [[-540, 3978400], [-565, 3978417]],
 [[-120, 3978428], [-155, 3978452]],
 [[-115, 3978468], [-140, 3978473]],
 [[-510, 3978547], [-560, 3978569]],
 [[-545, 3978571], [-565, 3978589]],
 [[-130, 3978620], [-150, 3978625]],
 [[-530, 3978626], [-565, 3978642]],
 [[-70, 3978743], [-105, 3978748]],
 [[-65, 3978777], [-115, 3978784]],
 [[-80, 3978805], [-105, 3978810]],
 [[-80, 3978843], [-115, 3978849]],
 [[-85, 3978910], [-105, 3978912]],
 [[-75, 3978928], [-110, 3978936]],
 [[-80, 3978943], [-115, 3978948]],
 [[-115, 3978953], [-135, 3978959]],
 [[-85, 3978976], [-120, 3978982]],
 [[-500, 3978983], [-590, 3979179]],
 [[-90, 3979045], [-110, 3979048]],
 [[-85, 3979064], [-110, 3979070]],
 [[-90, 3979141], [-115, 3979144]],
 [[-490, 3979166], [-515, 3979177]],
 [[-480, 3979180], [-585, 3979465]],
 [[-410, 3979249], [-450, 3979253]],
 [[-620, 3979284], [-640, 3979289]],
 [[-465, 3979461], [-485, 3979470]],
 [[-420, 3979463], [-455, 3979477]],
 [[-465, 3979496], [-485, 3979502]],
 [[-105, 3979552], [-125, 3979554]],
 [[-115, 3979755], [-135, 3979764]],
 [[-575, 3979795], [-595, 3979802]],
 [[-170, 3979826], [-215, 3979837]],
 [[-120, 3979844], [-190, 3979853]],
 [[-570, 3979861], [-590, 3979872]],
 [[-560, 3979876], [-585, 3979889]],
 [[-115, 3979884], [-150, 3979897]],
 [[-560, 3979914], [-585, 3979923]],
 [[-560, 3979938], [-580, 3979949]],
 [[-440, 3979949], [-510, 3979992]],
 [[-120, 3979952], [-140, 3979956]],
 [[-555, 3979952], [-575, 3979971]],
 [[-145, 3979957], [-170, 3979962]],
 [[-480, 3979997], [-510, 3980019]],
 [[-445, 3980005], [-465, 3980008]],
 [[-470, 3980024], [-490, 3980027]],
 [[-450, 3980058], [-495, 3980095]],
 [[-425, 3980085], [-450, 3980093]],
 [[-130, 3980095], [-155, 3980102]],
 [[-470, 3980101], [-495, 3980105]],
 [[-460, 3980117], [-485, 3980124]],
 [[-125, 3980257], [-145, 3980260]],
 [[-135, 3980642], [-160, 3980645]],
 [[-100, 3981168], [-150, 3981180]],
 [[-65, 3981215], [-170, 3981297]],
 [[-160, 3981219], [-195, 3981234]],
 [[-115, 3981340], [-145, 3981363]],
 [[-115, 3981373], [-165, 3981431]],
 [[-115, 3981725], [-155, 3981742]],
 [[-50, 3982419], [-80, 3982425]],
 [[-50, 3982447], [-75, 3982452]],
 [[-50, 3982520], [-70, 3982536]],
 [[-110, 3982585], [-130, 3982589]],
 [[-50, 3983258], [-85, 3983284]],
 [[-55, 3983501], [-100, 3983541]],
 [[-100, 3983561], [-125, 3983572]],
 [[-50, 3983717], [-110, 3983726]],
 [[-90, 3983725], [-130, 3983735]],
 [[-50, 3983776], [-70, 3983788]],
 [[-310, 3983977], [-340, 3983986]],
 [[-90, 3984003], [-140, 3984017]],
 [[-320, 3984249], [-340, 3984252]],
 [[-70, 3984274], [-135, 3984311]],
 [[-95, 3984645], [-125, 3984648]],
 [[-100, 3984840], [-120, 3984852]],
 [[-105, 3985226], [-125, 3985230]],
 [[-115, 3985511], [-145, 3985529]],
 [[-125, 3985561], [-160, 3985581]],
 [[-115, 3985593], [-155, 3985605]],
 [[-135, 3985617], [-160, 3985625]],
 [[-115, 3985658], [-140, 3985668]],
 [[-145, 3985726], [-170, 3985731]],
 [[-105, 3985975], [-125, 3985977]],
 [[-140, 3986004], [-165, 3986012]],
 [[-115, 3986220], [-140, 3986225]],
 [[-95, 3986241], [-135, 3986257]],
 [[-100, 3986311], [-125, 3986320]],
 [[-120, 3986348], [-165, 3986381]],
 [[-110, 3986364], [-190, 3986463]],
 [[-110, 3986456], [-145, 3986471]],
 [[-100, 3986476], [-165, 3986583]],
 [[-60, 3987608], [-80, 3987612]],
 [[-115, 3987615], [-140, 3987632]],
 [[-85, 3987643], [-115, 3987651]],
 [[-85, 3987761], [-110, 3987763]],
 [[-90, 3987867], [-120, 3987876]],
 [[-75, 3987880], [-105, 3987883]],
 [[-70, 3987919], [-90, 3987921]],
 [[-85, 3987942], [-110, 3987949]],
 [[-110, 3987997], [-130, 3988001]],
 [[-90, 3988484], [-115, 3988491]],
 [[-95, 3988975], [-115, 3988981]],
 [[-95, 3989093], [-115, 3989100]],
 [[-50, 3989204], [-70, 3989206]],
 [[-50, 3989221], [-80, 3989224]],
 [[-55, 3989241], [-80, 3989246]],
 [[-60, 3989259], [-90, 3989262]],
 [[-75, 3989267], [-100, 3989269]],
 [[-50, 3989316], [-70, 3989320]],
 [[-50, 3989336], [-85, 3989340]],
 [[-60, 3989479], [-80, 3989486]],
 [[-55, 3989487], [-100, 3989496]],
 [[-155, 3989528], [-175, 3989535]],
 [[-50, 3989687], [-75, 3989693]],
 [[-55, 3989705], [-85, 3989714]],
 [[-155, 3989747], [-175, 3989752]],
 [[-55, 3989952], [-80, 3989955]],
 [[-55, 3989986], [-95, 3989989]],
 [[-245, 3990000], [-265, 3990002]],
 [[-255, 3990016], [-275, 3990019]],
 [[-250, 3990024], [-280, 3990030]],
 [[-230, 3990036], [-250, 3990043]],
 [[-260, 3990037], [-280, 3990044]],
 [[-65, 3990049], [-90, 3990055]],
 [[-60, 3990178], [-90, 3990188]],
 [[-50, 3990182], [-230, 3991891]],
 [[-225, 3990212], [-255, 3990220]],
 [[-80, 3990213], [-105, 3990216]],
 [[-50, 3990214], [-80, 3990225]],
 [[-175, 3990230], [-260, 3990270]],
 [[-50, 3990235], [-95, 3990241]],
 [[-70, 3990256], [-105, 3990261]],
 [[-255, 3990259], [-290, 3990268]],
 [[-50, 3990261], [-75, 3990267]],
 [[-170, 3990271], [-290, 3990505]],
 [[-50, 3990278], [-100, 3990290]],
 [[-55, 3990293], [-100, 3990310]],
 [[-245, 3990310], [-275, 3990321]],
 [[-55, 3990316], [-90, 3990326]],
 [[-50, 3990407], [-75, 3990414]],
 [[-245, 3990422], [-300, 3990432]],
 [[-50, 3990424], [-80, 3990462]],
 [[-55, 3990467], [-95, 3990474]],
 [[-55, 3990488], [-95, 3990494]],
 [[-50, 3990502], [-85, 3990510]],
 [[-215, 3990508], [-240, 3990515]],
 [[-180, 3990513], [-200, 3990524]],
 [[-55, 3990519], [-80, 3990531]],
 [[-70, 3990535], [-95, 3990548]],
 [[-190, 3990564], [-240, 3990674]],
 [[-180, 3990685], [-250, 3990800]],
 [[-250, 3990741], [-270, 3990762]],
 [[-195, 3990825], [-230, 3990921]],
 [[-235, 3991053], [-255, 3991069]],
 [[-180, 3991392], [-200, 3991401]],
 [[-210, 3991666], [-270, 3991701]],
 [[-180, 3991683], [-200, 3991688]],
 [[-185, 3991702], [-210, 3991714]],
 [[-180, 3991719], [-290, 3991827]],
 [[-50, 3991777], [-75, 3991793]],
 [[-55, 3991815], [-80, 3991829]],
 [[-180, 3991851], [-205, 3991869]],
 [[-55, 3991860], [-80, 3991872]],
 [[-170, 3991879], [-215, 3991888]],
 [[-50, 3991894], [-300, 3993876]],
 [[-220, 3991918], [-240, 3991921]],
 [[-175, 3991919], [-210, 3991936]],
 [[-170, 3991946], [-195, 3991962]],
 [[-50, 3991965], [-80, 3991970]],
 [[-55, 3991973], [-75, 3991982]],
 [[-50, 3992022], [-70, 3992029]],
 [[-195, 3992027], [-225, 3992040]],
 [[-50, 3992042], [-75, 3992045]],
 [[-170, 3992048], [-225, 3992066]],
 [[-50, 3992071], [-85, 3992090]],
 [[-175, 3992072], [-225, 3992099]],
 [[-55, 3992104], [-75, 3992107]],
 [[-180, 3992105], [-200, 3992120]],
 [[-210, 3992147], [-230, 3992157]],
 [[-55, 3992150], [-75, 3992153]],
 [[-60, 3992171], [-85, 3992182]],
 [[-175, 3992215], [-200, 3992225]],
 [[-60, 3992220], [-85, 3992226]],
 [[-185, 3992238], [-210, 3992241]],
 [[-180, 3992261], [-205, 3992272]],
 [[-190, 3992295], [-210, 3992323]],
 [[-185, 3992334], [-215, 3992348]],
 [[-190, 3992357], [-225, 3992390]],
 [[-175, 3992391], [-220, 3992430]],
 [[-195, 3992448], [-215, 3992468]],
 [[-170, 3992477], [-265, 3992655]],
 [[-50, 3992556], [-75, 3992559]],
 [[-185, 3992641], [-245, 3992789]],
 [[-235, 3992765], [-255, 3992768]],
 [[-200, 3992795], [-230, 3992848]],
 [[-235, 3992816], [-255, 3992819]],
 [[-65, 3992934], [-90, 3992937]],
 [[-155, 3992939], [-175, 3992942]],
 [[-55, 3993027], [-75, 3993031]],
 [[-150, 3993121], [-205, 3993146]],
 [[-155, 3993168], [-190, 3993196]],
 [[-165, 3993301], [-185, 3993305]],
 [[-265, 3993315], [-300, 3993324]],
 [[-55, 3993466], [-80, 3993495]],
 [[-55, 3993537], [-75, 3993543]],
 [[-55, 3993562], [-75, 3993598]],
 [[-95, 3993836], [-285, 3994824]],
 [[-90, 3993884], [-150, 3994043]],
 [[-45, 3993956], [-65, 3993967]],
 [[-80, 3993968], [-105, 3993973]],
 [[-50, 3994075], [-75, 3994086]],
 [[-50, 3994104], [-70, 3994113]],
 [[-50, 3994130], [-75, 3994145]],
 [[-145, 3994149], [-185, 3994167]],
 [[-50, 3994159], [-80, 3994190]],
 [[-70, 3994288], [-90, 3994290]],
 [[-80, 3994356], [-105, 3994359]],
 [[-50, 3994362], [-170, 3995206]],
 [[-175, 3994370], [-200, 3994381]],
 [[-60, 3994404], [-95, 3994426]],
 [[-55, 3994679], [-75, 3994684]],
 [[-50, 3994823], [-75, 3994828]],
 [[-200, 3994826], [-235, 3994849]],
 [[-200, 3994865], [-230, 3994878]],
 [[-65, 3994888], [-85, 3994893]],
 [[-55, 3994899], [-75, 3994902]],
 [[-180, 3994913], [-230, 3994933]],
 [[-190, 3994941], [-215, 3994957]],
 [[-185, 3994968], [-210, 3994972]],
 [[-175, 3994982], [-205, 3995001]],
 [[-55, 3995001], [-80, 3995005]],
 [[-185, 3995006], [-230, 3995073]],
 [[-55, 3995015], [-85, 3995019]],
 [[-50, 3995032], [-70, 3995035]],
 [[-55, 3995048], [-75, 3995053]],
 [[-50, 3995080], [-75, 3995086]],
 [[-195, 3995083], [-215, 3995100]],
 [[-175, 3995103], [-210, 3995108]],
 [[-55, 3995107], [-90, 3995114]],
 [[-80, 3995206], [-120, 3995213]],
 [[-55, 3995217], [-145, 3995404]],
 [[-55, 3995224], [-75, 3995231]],
 [[-50, 3995245], [-70, 3995247]],
 [[-205, 3995284], [-250, 3995302]],
 [[-210, 3995306], [-255, 3995323]],
 [[-160, 3995316], [-180, 3995319]],
 [[-190, 3995321], [-220, 3995327]],
 [[-210, 3995347], [-255, 3995362]],
 [[-205, 3995363], [-230, 3995369]],
 [[-230, 3995373], [-255, 3995379]],
 [[-230, 3995385], [-250, 3995395]],
 [[-230, 3995402], [-250, 3995415]],
 [[-55, 3995407], [-115, 3995454]],
 [[-225, 3995416], [-245, 3995419]],
 [[-50, 3995454], [-105, 3995533]],
 [[-210, 3995524], [-230, 3995533]],
 [[-220, 3995540], [-240, 3995543]],
 [[-50, 3995553], [-75, 3995575]],
 [[-50, 3995674], [-85, 3995687]],
 [[-55, 3995696], [-85, 3995700]],
 [[-50, 3995705], [-70, 3995723]],
 [[-55, 3995729], [-115, 3995737]],
 [[-110, 3995732], [-145, 3995743]],
 [[-55, 3995742], [-90, 3995747]],
 [[-80, 3995747], [-130, 3995758]],
 [[-65, 3995750], [-100, 3995763]],
 [[-55, 3995764], [-75, 3995766]],
 [[-95, 3995765], [-135, 3995776]],
 [[-55, 3995770], [-140, 3995793]],
 [[-50, 3995793], [-165, 3996188]],
 [[-120, 3995801], [-145, 3995805]],
 [[-50, 3996193], [-100, 3996440]],
 [[-50, 3996441], [-95, 3996636]],
 [[-50, 3996648], [-70, 3996674]],
 [[-50, 3996687], [-90, 3996705]],
 [[-50, 3996712], [-90, 3996715]],
 [[-50, 3996718], [-80, 3996758]],
 [[-50, 3996761], [-85, 3996823]],
 [[-50, 3996826], [-80, 3996856]],
 [[-50, 3996859], [-100, 3996881]],
 [[-50, 3996887], [-70, 3996914]],
 [[-50, 3996919], [-80, 3996949]],
 [[-80, 3996938], [-100, 3996943]],
 [[-50, 3996982], [-75, 3996991]],
 [[-50, 3997037], [-75, 3997042]],
 [[-50, 3997052], [-70, 3997057]],
 [[-50, 3997060], [-70, 3997074]],
 [[-50, 3997091], [-70, 3997105]],
 [[-50, 3997108], [-85, 3997125]],
 [[-50, 3997126], [-80, 3997142]],
 [[-50, 3997155], [-80, 3997167]],
 [[-50, 3997175], [-75, 3997186]],
 [[-50, 3997195], [-80, 3997200]],
 [[-50, 3997210], [-70, 3997212]],
 [[-50, 3997224], [-75, 3997249]],
 [[-80, 3997235], [-100, 3997242]],
 [[-50, 3997339], [-75, 3997347]],
 [[-50, 3997507], [-70, 3997515]],
 [[-135, 3997526], [-155, 3997530]],
 [[-50, 3997543], [-80, 3997555]],
 [[-50, 3997749], [-75, 3997752]],
 [[-135, 3997800], [-155, 3997802]],
 [[-50, 3997801], [-75, 3997806]],
 [[-50, 3997950], [-70, 3997955]],
 [[-45, 3998338], [-70, 3998346]],
 [[-50, 3998393], [-70, 3998398]],
 [[-50, 3998619], [-70, 3998633]],
 [[-60, 3998741], [-80, 3998744]],
 [[-50, 3998782], [-70, 3998784]],
 [[-55, 3998887], [-75, 3998890]],
 [[-50, 3998948], [-75, 3998952]],
 [[-50, 3998988], [-70, 3998993]],
 [[-50, 3999018], [-70, 3999021]],
 [[-60, 3999328], [-85, 3999331]],
 [[-50, 3999362], [-75, 3999376]],
 [[-60, 3999477], [-80, 3999482]],
 [[-50, 3999524], [-75, 3999527]],
 [[-50, 3999583], [-70, 3999586]],
 [[-50, 3999603], [-70, 3999607]],
 [[-50, 3999709], [-70, 3999730]],
 [[-50, 3999964], [-70, 3999978]],
 [[-50, 4000142], [-80, 4000194]],
 [[-50, 4000237], [-70, 4000246]],
 [[-70, 4000264], [-90, 4000272]],
 [[-50, 4000277], [-70, 4000294]],
 [[-50, 4000311], [-70, 4000334]],
 [[-50, 4000560], [-80, 4000597]],
 [[-75, 4000624], [-95, 4000636]],
 [[-50, 4000637], [-70, 4000648]],
 [[-50, 4000763], [-75, 4000776]],
 [[-50, 4001155], [-70, 4001175]],
 [[-145, 4001155], [-165, 4001180]],
 [[-50, 4001204], [-70, 4001227]],
 [[-50, 4001276], [-75, 4001288]],
 [[-50, 4001404], [-80, 4001419]],
 [[-50, 4001460], [-70, 4001481]],
 [[-120, 4001467], [-140, 4001471]],
 [[-45, 4001566], [-65, 4001572]],
 [[-50, 4001720], [-70, 4001728]],
 [[-50, 4001938], [-75, 4001943]],
 [[-55, 4001992], [-95, 4002002]],
 [[-50, 4002025], [-70, 4002034]],
 [[-50, 4002059], [-80, 4002071]],
 [[-60, 4002134], [-80, 4002148]],
 [[-70, 4002164], [-95, 4002183]],
 [[-70, 4002253], [-90, 4002259]],
 [[-65, 4002292], [-100, 4002300]],
 [[-55, 4002311], [-90, 4002318]],
 [[-60, 4002375], [-80, 4002378]],
 [[-50, 4002465], [-85, 4002483]],
 [[-135, 4002479], [-155, 4002501]],
 [[-55, 4002540], [-75, 4002546]],
 [[-50, 4002576], [-80, 4002582]],
 [[-50, 4002644], [-90, 4002659]],
 [[-110, 4002715], [-130, 4002718]],
 [[-60, 4002716], [-85, 4002727]],
 [[-125, 4002738], [-150, 4002747]],
 [[-60, 4002795], [-85, 4002805]],
 [[-70, 4002818], [-110, 4002841]],
 [[-50, 4002859], [-75, 4002879]],
 [[-75, 4002896], [-105, 4002908]],
 [[-60, 4002927], [-120, 4002976]],
 [[-50, 4002954], [-80, 4002981]],
 [[-65, 4003003], [-110, 4003071]],
 [[-60, 4003077], [-80, 4003087]],
 [[-70, 4003102], [-115, 4003153]],
 [[-95, 4003204], [-115, 4003210]],
 [[-75, 4003276], [-150, 4003418]],
 [[-55, 4003307], [-85, 4003317]],
 [[-75, 4003463], [-105, 4003525]],
 [[-135, 4003785], [-155, 4003790]],
 [[-85, 4003790], [-110, 4003793]],
 [[-50, 4003798], [-85, 4003819]],
 [[-50, 4003850], [-70, 4003854]],
 [[-120, 4003850], [-145, 4003859]],
 [[-55, 4003920], [-95, 4003949]],
 [[-55, 4003969], [-80, 4003979]],
 [[-135, 4003998], [-155, 4004001]],
 [[-65, 4004086], [-100, 4004123]],
 [[-95, 4004153], [-135, 4004197]],
 [[-140, 4004156], [-160, 4004170]],
 [[-100, 4004193], [-160, 4004271]],
 [[-55, 4004243], [-100, 4004301]],
 [[-50, 4004333], [-95, 4004362]],
 [[-50, 4004413], [-85, 4004433]],
 [[-95, 4004435], [-155, 4004478]],
 [[-50, 4004476], [-75, 4004490]],
 [[-105, 4004495], [-140, 4004512]],
 [[-50, 4004521], [-125, 4004549]],
 [[-50, 4004563], [-115, 4004601]],
 [[-135, 4004619], [-155, 4004632]],
 [[-60, 4004623], [-85, 4004654]],
 [[-125, 4004662], [-155, 4004678]],
 [[-85, 4004665], [-155, 4004738]],
 [[-50, 4004670], [-75, 4004675]],
 [[-50, 4004697], [-105, 4004746]],
 [[-50, 4004765], [-95, 4004795]],
 [[-100, 4004765], [-155, 4004796]],
 [[-45, 4004810], [-80, 4004828]],
 [[-55, 4004810], [-155, 4004895]],
 [[-90, 4004883], [-115, 4004887]],
 [[-50, 4004900], [-155, 4004962]],
 [[-135, 4004970], [-155, 4004976]],
 [[-65, 4004974], [-85, 4004984]],
 [[-85, 4004975], [-155, 4005013]],
 [[-50, 4004990], [-75, 4005003]],
 [[-50, 4005025], [-155, 4005095]],
 [[-135, 4005080], [-155, 4005089]],
 [[-85, 4005081], [-125, 4005103]],
 [[-65, 4005102], [-95, 4005118]],
 [[-120, 4005117], [-155, 4005171]],
 [[-50, 4005127], [-110, 4005197]],
 [[-125, 4005190], [-150, 4005215]],
 [[-75, 4005220], [-115, 4005225]],
 [[-115, 4005228], [-145, 4005255]],
 [[-100, 4005261], [-150, 4005300]],
 [[-80, 4005276], [-100, 4005280]],
 [[-50, 4005310], [-70, 4005322]],
 [[-50, 4005339], [-90, 4005359]],
 [[-100, 4005361], [-140, 4005377]],
 [[-65, 4005377], [-95, 4005399]],
 [[-110, 4005445], [-140, 4005449]],
 [[-60, 4005453], [-80, 4005472]],
 [[-50, 4005481], [-80, 4005491]],
 [[-125, 4005509], [-150, 4005526]],
 [[-50, 4005540], [-95, 4005560]],
 [[-85, 4005549], [-150, 4005611]],
 [[-90, 4005624], [-140, 4005671]],
 [[-50, 4005637], [-85, 4005658]],
 [[-55, 4005680], [-85, 4005689]],
 [[-110, 4005685], [-145, 4005701]],
 [[-50, 4005705], [-75, 4005729]],
 [[-100, 4005724], [-150, 4005787]],
 [[-50, 4005750], [-95, 4005785]],
 [[-100, 4005829], [-150, 4005872]],
 [[-50, 4005847], [-75, 4005870]],
 [[-50, 4005872], [-85, 4005886]],
 [[-85, 4005877], [-120, 4005902]],
 [[-125, 4005895], [-145, 4005900]],
 [[-50, 4005908], [-85, 4005926]],
 [[-100, 4005926], [-145, 4005966]],
 [[-105, 4005972], [-145, 4005980]],
 [[-85, 4005986], [-120, 4006005]],
 [[-50, 4006019], [-90, 4006028]],
 [[-115, 4006024], [-145, 4006037]],
 [[-95, 4006052], [-120, 4006059]],
 [[-75, 4006074], [-145, 4006115]],
 [[-50, 4006106], [-85, 4006134]],
 [[-80, 4006160], [-115, 4006169]],
 [[-95, 4006222], [-145, 4006278]],
 [[-50, 4006308], [-145, 4006362]],
 [[-75, 4006347], [-145, 4006405]],
 [[-120, 4006400], [-145, 4006421]],
 [[-50, 4006435], [-80, 4006444]],
 [[-95, 4006441], [-135, 4006467]],
 [[-125, 4006476], [-145, 4006525]],
 [[-55, 4006516], [-85, 4006538]],
 [[-50, 4006576], [-85, 4006584]],
 [[-95, 4006594], [-130, 4006613]],
 [[-85, 4006619], [-150, 4006650]],
 [[-50, 4006638], [-75, 4006645]],
 [[-100, 4006673], [-145, 4006732]],
 [[-50, 4006691], [-70, 4006708]],
 [[-90, 4006768], [-125, 4006808]],
 [[-115, 4006822], [-140, 4006833]],
 [[-50, 4006862], [-135, 4006939]],
 [[-100, 4006926], [-145, 4006997]],
 [[-50, 4006956], [-115, 4006978]],
 [[-100, 4007004], [-125, 4007025]],
 [[-60, 4007005], [-95, 4007035]],
 [[-90, 4007041], [-125, 4007058]],
 [[-50, 4007081], [-80, 4007102]],
 [[-70, 4007099], [-115, 4007114]],
 [[-110, 4007114], [-140, 4007124]],
 [[-75, 4007131], [-105, 4007142]],
 [[-115, 4007140], [-145, 4007167]],
 [[-50, 4007150], [-85, 4007181]],
 [[-105, 4007171], [-145, 4007193]],
 [[-50, 4007196], [-115, 4007226]],
 [[-115, 4007224], [-140, 4007231]],
 [[-50, 4007246], [-75, 4007256]],
 [[-110, 4007248], [-135, 4007260]],
 [[-125, 4007272], [-145, 4007277]],
 [[-70, 4007274], [-90, 4007283]],
 [[-95, 4007298], [-145, 4007327]],
 [[-60, 4007305], [-85, 4007310]],
 [[-50, 4007326], [-75, 4007345]],
 [[-85, 4007335], [-145, 4007377]],
 [[-110, 4007402], [-145, 4007424]],
 [[-105, 4007433], [-145, 4007457]],
 [[-50, 4007445], [-80, 4007460]],
 [[-115, 4007472], [-150, 4007495]],
 [[-95, 4007493], [-115, 4007504]],
 [[-50, 4007494], [-70, 4007501]],
 [[-120, 4007507], [-150, 4007513]],
 [[-125, 4007521], [-150, 4007539]],
 [[-105, 4007549], [-150, 4007564]],
 [[-125, 4007573], [-150, 4007604]],
 [[-120, 4007612], [-150, 4007618]],
 [[-130, 4007641], [-150, 4007646]],
 [[-105, 4007651], [-125, 4007654]],
 [[-115, 4007660], [-140, 4007668]],
 [[-45, 4007668], [-70, 4007674]],
 [[-85, 4007682], [-125, 4007705]],
 [[-125, 4007682], [-150, 4007692]],
 [[-130, 4007700], [-150, 4007704]],
 [[-105, 4007714], [-150, 4007748]],
 [[-50, 4007751], [-70, 4007771]],
 [[-125, 4007758], [-155, 4007761]],
 [[-130, 4007772], [-155, 4007781]],
 [[-120, 4007794], [-155, 4007820]],
 [[-75, 4007805], [-95, 4007808]],
 [[-135, 4007854], [-160, 4007875]],
 [[-110, 4007876], [-155, 4007898]],
 [[-60, 4007914], [-80, 4007917]],
 [[-120, 4007922], [-160, 4007965]],
 [[-95, 4007927], [-120, 4007936]],
 [[-70, 4007952], [-110, 4007960]],
 [[-110, 4007993], [-150, 4008007]],
 [[-125, 4008011], [-145, 4008025]],
 [[-105, 4008038], [-155, 4008059]],
 [[-55, 4008075], [-100, 4008088]],
 [[-125, 4008085], [-155, 4008103]],
 [[-105, 4008115], [-155, 4008137]],
 [[-80, 4008135], [-110, 4008145]],
 [[-115, 4008145], [-155, 4008165]],
 [[-60, 4008172], [-85, 4008176]],
 [[-140, 4008181], [-160, 4008195]],
 [[-130, 4008202], [-155, 4008207]],
 [[-105, 4008244], [-150, 4008265]],
 [[-50, 4008292], [-85, 4008321]],
 [[-95, 4008293], [-160, 4008339]],
 [[-60, 4008356], [-140, 4008370]],
 [[-135, 4008387], [-160, 4008397]],
 [[-80, 4008397], [-110, 4008419]],
 [[-120, 4008406], [-160, 4008448]],
 [[-55, 4008452], [-85, 4008466]],
 [[-95, 4008460], [-160, 4008498]],
 [[-55, 4008476], [-85, 4008515]],
 [[-90, 4008510], [-165, 4008631]],
 [[-95, 4008564], [-115, 4008577]],
 [[-90, 4008641], [-165, 4008881]],
 [[-65, 4008670], [-95, 4008707]],
 [[-50, 4008750], [-80, 4008760]],
 [[-50, 4008850], [-75, 4008855]],
 [[-75, 4008880], [-165, 4009103]],
 [[-60, 4008886], [-85, 4008891]],
 [[-50, 4008988], [-75, 4008995]],
 [[-50, 4009010], [-70, 4009015]],
 [[-50, 4009022], [-90, 4009036]],
 [[-60, 4009037], [-85, 4009046]],
 [[-70, 4009057], [-100, 4009065]],
 [[-60, 4009090], [-115, 4009108]],
 [[-85, 4009103], [-170, 4009200]],
 [[-50, 4009115], [-70, 4009127]],
 [[-95, 4009126], [-120, 4009133]],
 [[-55, 4009164], [-85, 4009174]],
 [[-105, 4009176], [-125, 4009181]],
 [[-50, 4009187], [-75, 4009204]],
 [[-65, 4009199], [-115, 4009220]],
 [[-130, 4009205], [-170, 4009211]],
 [[-100, 4009219], [-135, 4009231]],
 [[-50, 4009225], [-85, 4009233]],
 [[-135, 4009228], [-165, 4009232]],
 [[-60, 4009237], [-90, 4009241]],
 [[-110, 4009240], [-165, 4009284]],
 [[-90, 4009261], [-120, 4009265]],
 [[-60, 4009266], [-85, 4009269]],
 [[-65, 4009281], [-110, 4009295]],
 [[-115, 4009286], [-165, 4009312]],
 [[-50, 4009295], [-115, 4009311]],
 [[-50, 4009315], [-175, 4010560]],
 [[-60, 4009332], [-85, 4009336]],
 [[-70, 4009401], [-110, 4009412]],
 [[-80, 4009414], [-100, 4009417]],
 [[-65, 4009419], [-90, 4009429]],
 [[-50, 4009524], [-80, 4009534]]
]

const rectangleItems = rectangles.map((rectangle, i) =>
  <Rectangle
    bounds={rectangle}
    key={rectangle}
    opacity={0.75}
    fillColor="white"
    fillOpacity={0.10}
    weight={2}
    title="Annotation"
    className="Annotation"
    pathOptions={{ color: '#FF69B4' }}
  >
    <Tooltip>AH_School {i}<br />d20191016_t121103-t233917_Zsc-DWBA-Schools_All-RegionDefs.evr</Tooltip>
  </Rectangle>
)

const rectangleItems2 = rectangles2.map((rectangle, i) =>
  <Rectangle
    bounds={rectangle}
    key={rectangle}
    opacity={0.75}
    fillColor="white"
    fillOpacity={0.10}
    weight={2}
    title="Annotation"
    className="Annotation"
    pathOptions={{ color: '#ffff00' }}
  >
    <Tooltip>EVR {i}</Tooltip>
  </Rectangle>
)

const WaterColumnVisualization = ({
  tileSize,
  storeShape,
  initialTimeIndex,
  // initialFrequencyIndex,
}) => {
  const dispatch = useAppDispatch();
  const ship = useAppSelector(selectShip);
  const cruise = useAppSelector(selectCruise);
  const sensor = useAppSelector(selectSensor);
  // TODO: need to parse depth same way as time, currently too much data!
  // const depthMinIndex = useAppSelector(selectDepthMinIndex);
  // const depthMaxIndex = useAppSelector(selectDepthMaxIndex);
  const timeMinIndex = useAppSelector(selectTimeMinIndex);
  const timeMaxIndex = useAppSelector(selectTimeMaxIndex);

  // const domain = useMemo(() => {
  //     return [depthMinIndex, depthMaxIndex];
  // }, [depthMinIndex, depthMaxIndex]);

  function GetMapBounds() {
    // Get the leaflet map bounds on each click for updating axes
    const map = useMap();

    useMapEvents({
      // move: () => {
      //   console.log('move use map events.');
      // },
      // load: () => {
      //   console.log("this doesnt run?");
      // },
      moveend: () => {
        const bounds = map.getBounds();

        dispatch(
          updateDepthMinIndex(Math.round(bounds.getNorthEast().lat * -1))
        );
        dispatch(
          updateDepthMaxIndex(Math.round(bounds.getSouthWest().lat * -1))
        );
        dispatch(
          updateTimeMinIndex(Math.round(bounds.getSouthWest().lng))
        );
        dispatch(
          updateTimeMaxIndex(Math.round(bounds.getNorthEast().lng))
        );
        // dispatch(depthArrayAsync({ ship, cruise, sensor })); // TODO: indexStart: depthMinIndex, indexEnd: depthMaxIndex
        // console.log('moveend timeArray')
        // dispatch(timeArrayAsync({ ship, cruise, sensor, indexStart: timeMinIndex, indexEnd: timeMaxIndex }));
        dispatch(timeArrayAsync({
          ship,
          cruise,
          sensor,
          indexStart: Math.round(bounds.getSouthWest().lng),
          indexEnd: Math.round(bounds.getNorthEast().lng),
        }));
      },
    });

    return null;
  }

  const [map, setMap] = useState(null);

  const annotation = useAppSelector(selectAnnotation);
  const annotationAI = useAppSelector(selectAnnotationAI);
  const annotationColor = useAppSelector(selectAnnotationColor);

  const mapCenterX = initialTimeIndex;
  // TODO: this will create a problem when page is resized
  const mapCenterY = -1 * (window.innerHeight / 2) + 100;
  const mapCenter = [mapCenterY, mapCenterX];
  const marginX = 500; // map maxBounds + margin
  const marginY = 100;

  useEffect(() => {
    if (map) {
      map.eachLayer((x) => {
        if (x.options.className === "Annotation") {
          x.setStyle({
            color: annotationColor,
          });
        }
      });
    }
  }, [annotationColor, map]);

  useEffect(() => {
    if (map) {
      // not sure if I need to just limit this to first load of map?
      const bounds = map.getBounds();
      
      dispatch(updateDepthMinIndex(Math.round(bounds._northEast.lat * -1)));
      dispatch(updateDepthMaxIndex(Math.round(bounds._southWest.lat * -1)));

      dispatch(updateTimeMinIndex(Math.round(bounds._southWest.lng)));
      dispatch(updateTimeMaxIndex(Math.round(bounds._northEast.lng)));
      
      // dispatch(depthArrayAsync({ ship, cruise, sensor })); // , indexStart: depthMinIndex, indexEnd: depthMaxIndex }));
      // dispatch(timeArrayAsync({ ship, cruise, sensor, indexStart: timeMinIndex, indexEnd: timeMaxIndex }));
    }
  }, [cruise, dispatch, map, sensor, ship, timeMaxIndex, timeMinIndex]);

  return (
    <div className="WaterColumnVisualization">
      <Container fluid className="h-100 d-flex flex-column">
        <Row className="h-100">
          <Col className="topLeft p-0 m-0" style={{ backgroundColor: "#ddd" }}>
            <MapContainer
              crs={CRS.Simple}
              zoom={0}
              center={mapCenter}
              minZoom={0}
              maxZoom={0}
              zoomControl={false}
              tileSize={tileSize}
              className="Map"
              ref={setMap}
              maxBounds={[
                [
                  -1 * Math.ceil(storeShape[0] / tileSize) * tileSize - marginX,
                  0 - marginX,
                ],
                [0 + marginY, storeShape[1] + marginY],
              ]}
              whenReady={(e) => {
                const windowWidth = e.target._size.x;
                const windowTopLeft = e.target._pixelOrigin.x
                // console.log("The map is created");
                dispatch(depthArrayAsync({ ship, cruise, sensor })); // TODO: indexStart: depthMinIndex, indexEnd: depthMaxIndex
                // TODO: this isn't getting the right timeArray on initialize!
                // console.log(e);
                // debugger;
                // dispatch(timeArrayAsync({ ship, cruise, sensor, indexStart: 0, indexEnd: 1024 })); // TODO: hack right now
                dispatch(timeArrayAsync({ ship, cruise, sensor, indexStart: windowTopLeft, indexEnd: (windowTopLeft+windowWidth) })); // TODO: hack right now
                // NOTE: loading all the depth data is fine:
                // dispatch(depthArrayAsync({ ship, cruise, sensor }));
                // NOTE: loading all the time data is a problem:
                // dispatch(timeArrayAsync({ ship, cruise, sensor, indexStart: timeMinIndex, indexEnd: timeMaxIndex }));
              }}
            >
              {/* Water Column Data */}
              <CustomLayer />

              {/* Alex's AI Visualization Results */}
              {/* TODO: use checkbox to enable/disable */}
              {annotationAI && <CustomAILayer />}

              <LocationMarker />

              {annotation ? (
                <>
                  <>{rectangleItems}</>
                  <>{rectangleItems2}</>
                </>
              ) : (
                <></>
              )}
              <GetMapBounds />
            </MapContainer>
          </Col>
          <Col
            className="topRight depthAxis"
            style={{ backgroundColor: "#dddddd" }}
          >
            <DepthAxis />
          </Col>
        </Row>
        <Row>
          <Col
            className="bottomLeft timeAxis"
            style={{ backgroundColor: "#dddddd" }}
          >
            <TimeAxis />
          </Col>
          <Col
            className="bottomRight"
            style={{ backgroundColor: "#dddddd" }}
          ></Col>
        </Row>
      </Container>
    </div>
  );
};

export default WaterColumnVisualization;

WaterColumnVisualization.propTypes = {
  tileSize: PropTypes.string.isRequired,
  storeShape: PropTypes.array.isRequired,
  initialTimeIndex: PropTypes.number.isRequired,
  // initialFrequencyIndex: PropTypes.number.isRequired,
};
